# Corpus contains JSON strings with the following tags:
# tags - An exact phrase or space-separated keywords
# content - The answer that will be returned
# context - A way to group answers together, like creating a channel name. Ignored in search.

{"tags":"","content":"Can I get your email address, please?","next-action":"validate-email"}
{"tags":"","content":"Thanks.","prev-action":"validate-email","next-action":"say-thanks"}


CHANNEL - Ask for email

Ask for email (Can I get your email please?)
    action: Show text: Can I get your email, please?

CHANNEL - askforemail
step 1: wait for email address
step 2: entered address doesn't look valid, do you want to try again?


def askForEmail():
    setChannel("askforemail")
    setStepNumber("1")
    showResponse("Can I get your email, please?")

def calculateResponsse():
    if isset channel and isset stepnumber
        if channel == "askforemail" and stepnumber == "1"
            valid = validateEmail( userinput )
            if !valid:
                if theyAskingSomethingElse():
                    exitChannel
                    lookForCorrectAnswer
                    showAnswer
                else:
                    showResponse("Sorry, that doesn't look like a valid email. Can you try again?")
            else:
                saveEmail
                showReponse("Great, thanks for that.")
                exitChannel


def validateEmail( email ):
    if email contains @ and .
        return True
    else:
        return False

def setChannel( channelname ):
    addToOutput( "\"channel\":\""+channelname+"\"" )

def setStepNumber( stepnumber ):
    addToOutput( "\"stepnumber\":\""+stepnumber+"\"" )